<p id="notice">
    <%= notice %>
</p>
<h1>Users</h1>
<table>
    <thead>
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Login</th>
            <th colspan="3"></th>
        </tr>
    </thead>
    <tbody>
        <% @users.each do |user| %>
            <tr>
                <td>
                    <%= user.name %>
                </td>
                <td>
                    <%= user.email %>
                </td>
                <td>
                    <%= user.login %>
                </td>
                <td>
                    <%= link_to 'Show', user %>
                </td>
                <td>
                    <%= link_to 'Edit', edit_user_path(user) %>
                </td>
                <td>
                    <%= link_to 'Destroy', user, method: :delete, data: { confirm: 'Are you sure?' } %>
                </td>
            </tr>
            <% end %>
    </tbody>
</table>
<br>
<div id="abc"></div>
<div id="dfg" style="width: 100px;margin-left: 500px"></div>
<div id="abcd"></div>
<script>
Ext.onReady(function() {
    Ext.QuickTips.init();

    var store = new Ext.data.JsonStore({
        url: 'users.json',
        fields: [
            'id',
            'name',
            'email',
            'login'
        ]
    });
    store.load();

    // add your data store here
    var grid = new Ext.grid.EditorGridPanel({
        xtype: 'actioncolumn',
        id: 'myGrid',
        renderTo: Ext.get("abc"),
        frame: true,
        title: 'Movie Database',
        height: 200,
        width: 600,
        store: store,
        tbar: [{
            xtype: 'button',
            text: 'Create',
            handler: function() {
                movie_form.show();
            }
        },
        {
            xtype:'button',
            text: 'xxx',
            handler: function() {
                var sm = grid.getSelectionModel();
            }
        }],
        columns: [
            { id: 'id', dataIndex: 'id' },
            { header: "Name", dataIndex: 'name' },
            { header: "Email", dataIndex: 'email' },
            { header: "Login", dataIndex: 'login' },
            {
                header: "Action",
                width: 150,
                xtype: 'actioncolumn',
                // dataIndex: 'action',
                items: [{
                    icon: 'message.png',
                    tooltip: 'show',
                    handler: function() {
                        var sm = grid.getSelectionModel();
                        if(sm.hasSelection()){
                        var sel = sm.selection;

                        var a = sel.record.data.name;
                        var b = sel.record.data.login;
                        var c = sel.record.data.email;
                        Ext.Msg.alert('User', a,b,c);
                    }
                    else{
                        Ext.Msg.alert('ssssssss','fffffffff');
                    }
                    }
                    

                }, {
                    icon: 'gear.png',
                    tooltip: 'edit',
                    handler: function(grid, rowIndex, colIndex, item, e, record) {
                        //add code for button click
                    }
                }, {
                    icon: 'plaster.png',
                    tooltip: 'delete',
                    handler: function(grid, rowIndex, colIndex, item, e, record) {
                        //add code for button click
                    }
                }]
            }
        ]
    });
    // var myBtnHandler = function(btn) {
    //     movie_form.show();
    // }
    // var fileBtn = new Ext.Button({
    //     text: 'Show Create Form',
    //     renderTo: Ext.get("dfg"),
    //     handler: myBtnHandler
    // });
});
</script>
<script src="/js/form.js"></script>